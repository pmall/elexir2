#!/usr/bin/python
# -*- coding: UTF-8 -*-
import os
import sys
import yaml
import threading
import time
import datetime
import MySQLdb
import subprocess

# ==============================================================================
# On définit des constantes
# ==============================================================================

# On récupère le répertoire de travail
wd = sys.path[0]

# On récupère la config
config = yaml.load(file(wd + '/config.yml', 'r'))

# Base de données
DBHOST = config['db_host']
DBUSER = config['db_user']
DBPASS = config['db_pass']
DBNAME = config['db_name']

# Nombre de threads autorisés en même temps
NBTHREADS = config['nb_threads']

# ==============================================================================
# Fonction retournant la date/heure actuelle
# ==============================================================================

def now():
	return datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S");

# ==============================================================================
# Fonction thread 
# ==============================================================================

def do_job(wd, job, sema):
	sema.acquire()

	id_job = job[0];

	if(job[3] == 'qc'):
		id_analyse = job[1]
		algo = 'qc'
	if(job[3] == 'preprocessing'):
		id_analyse = job[1]
		algo = 'correction'
	if(job[3] == 'paire'):
		id_analyse = job[2]
		algo = 'analyse_simple'
	if(job[3] == 'impaire'):
		id_analyse = job[2]
		algo = 'analyse_simple'
	if(job[3] == 'excels'):
		id_analyse = job[2]
		algo = 'create_excels'

	dbh = MySQLdb.connect(host = DBHOST, user = DBUSER, passwd = DBPASS, db = DBNAME)
	cursor = dbh.cursor()
	cursor.execute('UPDATE jobs SET status = %(status)s, start = %(date)s WHERE id = %(id)s', {'id':id_job, 'status':'processing', 'date':now()})

	command_process = subprocess.Popen(
		[wd + '/' + algo, str(id_analyse)],
		stdin=subprocess.PIPE,
		stdout=subprocess.PIPE,
		stderr=subprocess.STDOUT,
	)

	command_output = command_process.communicate()[0]

	log_file = open(config['log_file'], 'a')
	log_file.write(command_output)
	log_file.close();

	cursor.execute('UPDATE jobs SET status = %(status)s, end = %(date)s WHERE id = %(id)s', {'id':id_job, 'status':'done', 'date':now()})
	cursor.close
	dbh.close

	sema.release()

# ==============================================================================
# Script / boucle infinie
# ==============================================================================

while(1):
	dbh = MySQLdb.connect(host = DBHOST, user = DBUSER, passwd = DBPASS, db = DBNAME)

	sema = threading.Semaphore(NBTHREADS);

	while(1):

		cursor = dbh.cursor()
		cursor.execute('SELECT id, id_project, id_analysis, type FROM jobs WHERE status = %(status)s', {'status':'starting'})
		jobs = cursor.fetchall()

		for job in jobs:
			cursor.execute('UPDATE jobs SET status = %(status)s WHERE id = %(id)s', {'id':job[0], 'status':'waiting'})
			thread = threading.Thread(target = do_job, args = (wd, job, sema))
			thread.start()
			print thread

		time.sleep(5)
